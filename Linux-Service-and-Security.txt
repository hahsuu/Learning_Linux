Linux Service and Security
    OpenSSL
    OpenSSH
    DNS  BIND
    web：http httpd(apache) php mariadb(mysql)
        lamp
        nginx(tenine)  lnmp
    file server: ftp  nfs  samba
    dhcp  pxe
    iptables

OpenSSL
    NIST
    保密性
        数据保密性
        隐私性
    完整性
        数据完整性
        系统完整性
    可用性
    安全攻击
        被动攻击：窃听
        主动攻击：伪装，重放，消息篡改，拒绝服务
    安全机制
        加密：数字签名，访问控制，数据完整性，认证交换，流量填充，路由控制，公证
    安全服务
        认证，访问控制，
    数据保密性
        连接保密性
        无连接保密性
        选择域保密性
        流量保密性
    数据完整性
    不可否认性

    密码算法和协议
        对称加密
        公钥加密(非对称加密)
        单向加密
        认证协议

    Linux系统：OpenSSL，gpg（PGP的实现）
        对称加密算法，加密解密共用一个密钥
            DES: Data Encryption Standard
            3DES
            AES: Advaced Encryption Standard      128bits  192bits   256bits   384bits   512bits
            Blowfish
            Twofish
            IDEA
            RC6
            CAST5
                特性：
                    1. 加密解密使用同一密钥
                    2. 将原始数据分割成固定大小的块，逐个进行加密
                缺陷：
                    1. 密钥过多
                    2. 密钥分发不安全

        公钥加密，密钥成对出现
            公钥：公开给所有人，pubkey
            私钥：自己保存，必须保证其私密性，secret key
            
            数字签名(身份认证):接受方确认发送方的身份
            密钥交换：发送方用对方的公钥加密对称密钥，并发送给对方
            数据加密
                特点：用公钥加密的数据，只能用与之对应的私钥解密，反之亦然
            算法：RAS DSA ELGamal
        
        单向加密，只能加密，不能解密，提取数据指纹
            特性：定长输出，雪崩效应
            算法：
                md5     128bits
                sha1    160bits
                sha224
                sha256
                sha384
                sha512

            功能：保证数据完整性
    
    密钥交换协议 IKE
        公钥加密
        DH(Deffie-Hellman)
            A: p  g
            B: p  g
            A: x   不公开
            B: y   不公开
            A把 p^x%g 的结果发给B
            B把 p^y%g 的结果发给A

            A 把接收到的结果进行 x 次方运算，即 p^y%g^x
            B 把接收到的结果进行 y 次方运算，即 p^x%g^y
            双方计算等到的结果一致，即为密钥

    PKI Public Key Infrastructure  公钥基础设施
        签证机构：CA
        注册机构：RA
        证书吊销列表：CRL
        证书存取库

        X.509：定义了证书的结构及认证协议标准
            版本号
            序列号
            签名算法ID
            发行者名称
            有效期限
            主体名称
            发行者惟一标识
            主体惟一标识
            扩展
            发行者签名

    SSL: Secure Socket Layer
    TLS: Transport Layer Security
        1995年： SSL 2.0  Netscape
        1996年： SSL 3.0
        1999年： TLS 1.0
        2006年： TLS 1.1
        2008年： TLS 1.2
        2015年： TLS 1.3

        分层设计
            1. 最低层，基础算法原语实现，aes，ras，md5
            2. 向上一层，各种算法的实现
            3. 再向上一层，组合算法实现半成品
            4. 用各种组件拼装而成的种种成品密码学协议和软件，tls，ssh

    OpenSSl：开源项目
        三个组件
            OpenSSL：多用途的命令行工具
            libcrypto：公共加密库
            libssl：库，实现ssl及tls

        OpenSSL命令行
            openssl version  版本号
            标准命令、消息摘要命令、加密算法

            标准命令
                enc  ca  req
            对称加密
                工具：openssl enc   gpg
                算法：3DES  aes  blowfish  twofish

            enc 命令
                加密  # openssl enc -e -des3 -a -salt -in fstab -out fstab.ciphertxt
                解密  # openssl enc -d -des3 -a -salt -in fstab.ciphertxt -out fstab

            单向加密
                工具：md5sum  sha1sum sha224sum ... openssl dgst

                dgst命令
                    openssl dgst md5 /PAHT/TO/SOMEFILE

            MAC  Message Authentication Code，单向加密的一种延伸应用，用于实现在网络通信中保证所传输的数据的完整性
                机制：CBC-MAC   HMAC(使用md5或sha1算法)

            生成用户密码
                passwd命令(openssl的子命令)
                openssl passwd -1 -salt SALT 
            
            生成随机数
                openssl rand -base64|-hex NUM
                NUM表示字节数，-hex，每个字符4位，出现字符数为 NUM*2
            
            公钥加密
                算法：RSA  ELGamal
                加密工具：GPG rasutl

                    数字签名：
                        算法：RSA   DSA(Digital Signature Algorithm,也称DSS，Digital Signature Standard)   ELGamal
                    密钥交换
                        算法：dh
            生成密钥对
                在生成密钥对时，会用到随机数
                
                随机数生成器
                    熵池
                        /dev/rand  仅从熵池中取数据，熵池中数据用尽会阻塞
                        /dev/urand  默认从熵池中取数据，熵池中数据用尽后，会利用软件生成伪随机数，不会阻塞

                生成私钥
                    openssl genrsa -out /PATH/TO/PRIVATE-KYE.FILE 2048
                    例如：openssl genrsa -out prikey 2048
                    (umask 077;openssl genrsa -out prikey 2048)    将属组和其它用户的所有权限去除
                    用小括号将命令括起来，会启动一个子进程来执行括号中的命令，这样就不会改变当前的 umask 的值
                提取公钥
                    openssl ras -in /PATH/TO/PRIVATE-KEY.FILE -pubout 
                    例如：openssl rsa -in prikey -pubout    默认输出到屏幕

DNS and BIND
    DNS：Domain Name Service
        协议：tcp/53 udp/53 C/S架构
        BIND Bekerley Internet Name DNS：Domain  ISC

    本地名称解析配置文件  hosts
        Linux  /etc/hosts
        Windows  %windows%system32/drivers/etc/hosts

        1.1.1.1 www.lsu.edu.cn

    顶级域(一级域)  Top Level Domain   TLD
        com edu mil gov org net int

        三类：；组织域、国家域、反向域

    DNS查询类型
        递归查询
        迭代查询

    解析类型
        name->IP
        IP->name
        注意：正向反向解析是两个不同的空间

    DNS服务器类型
        主DNS服务器
            维护所负责解析的域内解析库(由管理员维护)的服务器
        辅助DNS服务器
            从主DNS服务器或其它从DNS服务器那里复制(区域传递)一份解析库
            序列号：解析库的版本号，前提：主服务器解析内容发生改变，其序列号增加
            刷新时间间隔：从服务器向主服务器请求同步解析库的时间间隔
            重试时间间隔：从服务器向主服务器请求同步解析库失败时，再次尝试的时间间隔
                重试时间间隔应该 小于 刷新时间间隔
            过期时长：从服务器始终联系不上主服务器多长后，放弃服务器角色，停止提供服务
            
            通知机制：当主服务器解析库发生改变，会主动通知从服务器

        缓存DNS服务器
        转发DNS服务器


    FQDN  Full Qualified Domain Name，完全限定域名，例如 www.lsu.edu.cn. 最后的点号不能省略
    一次完整的查询请求经过的流程
        client -> hosts文件 -> DNS Service -> local cache -> DNS Server(Recursion 递归) -> Server cache -> iteration(迭代) 

        解析答案
            肯定答案
            否定答案：请求的条目不存在等原因导致无法返回结果
            权威答案
            非权威答案

    资源记录  Resource Record  RR
    解析库由RR组成
        记录类型：
            SOA：Start Of Authority，起始授权记录，一个区域解析有且仅有一条SOA记录，并且必须出现在第一条
            A：Internet Address，作用，将FQDN -> IP
            AAAA：FQDN -> IPv6
            PTR：PoinTeR，IP -> FQDN
            NS：Name Server，专用于标明当前区域的DNS服务器
            CNAME：Canonical Name，别名记录
            MX：Mail eXchanger，邮件交换器

    资源记录定义的格式
        语法：name [TTL] IN rr_type value
        注意：
            1. TTL，可全局继承
            2. @ 符号可用于引用当前区域名字
            3. 同一个名字可以有多个不同的值，通过多条记录定义多个不同的值，以轮询方式响应
            4. 同一个值也可以有多个不同的名字，通过多条记录定义多个不同的名字，仅表示可通过不同的名字找到一个主机
            5. 相邻的两条资源记录的name相同时，可省略

        SOA：
            name：当前区域的名字，例如“magedu.com.”
            value：
                1. 当前区域的主DNS服务器FQDN，也可以是当前区域的名字，可用 @ 来表示
                2. 当前区域管理员的邮箱地址，地址中不能包含 @ 符号，一般用 . 来替换，如：linux.magedu.com.
                3. (主服务器协调属性的定义及否定答案的统一TTL)
                    例如：
                        magedu.com. 86400 IN SOA ns.magedu.com. nsadmin.magedu.com. (
                            2015042201              ;序列号
                            2H                      ;刷新时间，表示 2 小时
                            10M                     ;重试时间，表示 10 分钟
                            1W                      ;过期时间，表示 1 周
                            1D                      ;否定答案的TTL值
                        )

        NS：
            name：当前区域名字
            value：当前区域的某DNS服务器的主机名，如 ns.magedu.com.
            一个区域可以有多个DNS服务器(多条记录)
            例如：
                magedu.com. IN NS ns1.magedu.com.
                magedu.com. IN NS ns2.magedu.com.
            注意：
                对于NS记录而言，任何一条NS记录的服务器主机名，都应该在后续有一条A记录

        MX：
            name：当前区域名字
            value：当前区域的某邮件服务器的主机名，如 mx.magedu.com.
                value之前应该有一个数字(0-99)，表示此服务器优先级，一个区域内的MX记录可有多条
            例如：
                magedu.com. IN MX 10 mx1.magedu.com.
                            IN MX 20 mx2.magedu.com.
            注意：
                对于MX记录而言，任何一条MX记录的服务器主机名，都应该在后续有一条A记录

        A：
            name：某主机的完整名字，FQDN，如 www.magedu.com.
            value：主机对应的IP地址
            例如：
                www.magedu.com. IN A 1.1.1.1
                www.magedu.com. IN A 1.1.1.2

        注意：
            *.magedu.com. IN A 1.1.1.4          ;泛域名解析
            可通过泛域名解析，解析至特定地址，来避免用户输错名称，DNS给出否定答案，
            magedu.com. IN A 1.1.1.4

        AAAA：
            name：FQDN
            value：IPv6

        PTR：
            name：IP，有特定格式，把IP地址反过来写 1.2.3.4 要写作 4.3.2.1，还要加上特定后缀，in-addr.arpa.  
                完整的名字为： 4.3.2.1.in-addr.arpa.
            value：FQDN
            例如： 4.3.2.1.in-addr.arpa. IN PTR www.magedu.com.
            有简写方式，假设 1.2.3 是网络号，那么上述记录可写成：
                4. IN PTR www.magedu.com.
                网络地址和后缀可省略，主机IP地址要反写

        CNAME：
            name：别名的FQDN
            value：正式名字FQDN
            例如：
                web.magedu.com. IN CNAME www.magedu.com.

            

        




    









